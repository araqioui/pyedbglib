# All this infomation could be moved into pyproject.toml (from setuptools major version 61),
# but setup.cfg is used for backwards compatibility with pyhton 2.7 (which is only supported by setuptools major version 44 and older)
[metadata]
name = pyedbglib
# Get version from package source (__version__ variable in __init__.py)
version = attr: pyedbglib.__version__
author = Microchip Technology
author_email = support@microchip.com
description = Low-level protocol library for communicating with Microchip CMSIS-DAP based debuggers
long_description = file: pypi.md, CHANGELOG.md
long_description_content_type = text/markdown
license = MIT
keywords = Microchip, AVR, EDBG, protocol
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Topic :: Software Development :: Embedded Systems
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX :: Linux
    Operating System :: MacOS
    License :: OSI Approved :: MIT License

[options]
install_requires =
    # To ensure there exists a wheel for win32/py27
    cython<0.29.8; python_version<="2.7"
    # No requirements going forward
    cython; python_version>="3"
    hidapi; python_version>="3"
    hidapi==0.7.99.post21; python_version<="2.7"
    pyserial>=3.5

python_requires = >=2.7
packages = find:

[options.extras_require]
# List of packages required to develop this package
dev =
    pylint>=2.15
# List of packages required to run the tests in this package
test =
    mock
    pytest
# List of packages required to generate documentation (using Sphinx) for this package
doc =
    # To avoid missing modules when generating documentation the mock module used by the tests is needed.
    # The mock module could also be useful if some imports need to be mocked out when generating documentation.
    mock
    sphinx

# Any special rules for source files to be included can be configured here
[options.packages.find]
# Leave out tests and documentation related files from wheel and source distribution
exclude =
    pyedbglib.tests*
    doc*

# Any rules for non-python files to be included can be configured here
#[options.package_data]